function s(t){return n.prototype._attrs=[...t],Array.from(t.keys())}function n(t){const e=n.prototype._attrs;return[...new Array(e.length)].forEach((c,r)=>{t.setAttribute(e[r][0],e[r][1]),Object.defineProperty(t,String(e[r][0]),{get(){return t.getAttribute(String(e[r][0]))},set(o){return t.setAttribute(String(e[r][0]),o)}})})}function a(t){return typeof t===Function.name.toLowerCase()}const u=Object.create(null);Object.freeze(Object.assign(u,Object.freeze({HYPHEN:RegExp("-").source,UNDERSCORE:RegExp("_").source})));export{u as UNICODE,a as isFunction,s as registerAttrs,n as registerGetterSetter};
