class k{static draw({canvas:a,options:t}){let r=stage.grid.GRIDCELL_DIM,g=u(0,r,a.width);const e=a.getContext("2d");e.setTransform(devicePixelRatio,0,0,devicePixelRatio,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height);function d(l,c,h=r,f=r){e.beginPath(),e.rect(l,c,h,f),e.kind=(t==null?void 0:t.kind)||"grid",e.lineWidth=(t==null?void 0:t.lineWidth)||e.global.options.lineWidth,e.strokeStyle=(t==null?void 0:t.strokeStyle)||e.global.options.strokeStyle,t.hidden||e.stroke()}Math.ceil(stage.clientWidth/r);let n=Math.ceil(stage.clientHeight/r);return[...new Array(n)].map((l,c)=>1+c).forEach(l=>{g.forEach((c,h)=>{l===1&&d(r*h,0),d(r*h,r*l)})}),!0}}function u(i,a,t,r=!0,g=[]){const e=[];e:for(i;i<t+r;i+=a){for(let d of g)if(d==i)continue e;e.push(i)}return e}export{k as default};
