var N=Object.defineProperty;var O=(h,t,e)=>t in h?N(h,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[t]=e;var f=(h,t,e)=>O(h,typeof t!="symbol"?t+"":t,e);const n=class n{static draw({canvas:t,options:e}){var s,g,d,l;const a=t.getContext("2d");if(a.save(),(s=e.overrides)!=null&&s.transform){if((g=e.overrides.transform)!=null&&g.translation){let{x:r,y:i}=e.overrides.transform.translation;a.translate(r,i)}if((d=e.overrides.transform)!=null&&d.angle&&(a.rotate(e.overrides.transform.angle),a.currentAngle=e.overrides.transform.angle),(l=e.overrides.transform)!=null&&l.scale){let{x:r,y:i}=e.overrides.transform.scale;a.scale(r,i)}}return a.beginPath(),e.points.forEach((r,i)=>{if(i===0)switch(e.kind){case"ring":a.moveTo(a.global.options.responsiveValue*r[0]-(e.lineWidth||a.global.options.lineWidth),a.global.options.responsiveValue*r[1]-(e.lineWidth||a.global.options.lineWidth));break;default:a.moveTo(0,0);break}a.lineTo(r[0],r[1])}),a.closePath(),a.lineWidth=e.lineWidth||a.global.options.lineWidth,a.strokeStyle=e.strokeStyle||a.global.options.strokeStyle,a.fillStyle=e.fillStyle||a.global.options.fillStyle,a.fillStroke(),a.restore(),e.kind===this.ENUMS.KIND.vector.value&&e.points.forEach(r=>{this.addArrowTip({context:a,options:e,x2:r[0],y2:r[1],arrowTip:(e==null?void 0:e.arrowTip)||{baseLength:a.global.options.lineWidth*5,capLength:0,width:a.global.options.lineWidth*5}})}),!0}static addArrowTip({context:t,options:e,x2:a,y2:s,x1:g=0,y1:d=0,arrowTip:l}){var v,S,m,y;t.save();let{x:r,y:i}=((S=(v=e.overrides)==null?void 0:v.transform)==null?void 0:S.translation)||{x:0,y:0},k=((y=(m=e.overrides)==null?void 0:m.transform)==null?void 0:y.angle)||0;t.translate(r,i),t.rotate(k);const o=Math.atan2(s-d,a-g),b=o+Math.atan(l.width/(2*l.baseLength)),c=o-Math.atan(l.width/(2*l.baseLength)),u=a-l.baseLength*Math.cos(b),L=s-l.baseLength*Math.sin(b),W=a-l.baseLength*Math.cos(c),E=s-l.baseLength*Math.sin(c);return t.beginPath(),t.moveTo(a+l.capLength,s+l.capLength),t.lineTo(u,L),t.lineTo(W,E),t.closePath(),t.strokeStyle=e.strokeStyle,t.fillStyle=e.fillStyle||t.strokeStyle,t.fillStroke(),t.restore(),!0}};f(n,"RIGHTANGLE_SLOPE",1/Math.sin(Math.PI/4)),f(n,"ENUMS",{COLORS:{red(){},green(){},blue(){}},KIND:{line(){},vector(){},ring(){}}}),Object.freeze(n.ENUMS.COLORS),Object.freeze(n.ENUMS.KIND);let M=n;export{M as default};
