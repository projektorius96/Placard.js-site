import i from"../src/index-q0B0Z0BZ.js";class n{static draw({context:a}){const{COLORS:s}=i.Views.Line.ENUMS,{degToRad:r}=i.Helpers.Trigonometry;let{canvas:l}=a;return[i.Views.Line.draw({canvas:l,options:{kind:"vector",strokeStyle:s.red.value,points:[[a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid,a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid]]}}),i.Views.Line.draw({canvas:l,options:{kind:"vector",strokeStyle:s.green.value,points:[[a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*i.Views.Line.RIGHTANGLE_SLOPE,a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*i.Views.Line.RIGHTANGLE_SLOPE].map(e=>e*=a.snapToGrid)],overrides:{transform:{angle:r(45)}}}}),i.Views.Line.draw({canvas:l,options:{kind:"vector",strokeStyle:s.blue.value,points:[[a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid,a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid]],overrides:{transform:{translation:{x:a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid,y:a.global.options.scalingValue*stage.grid.GRIDCELL_DIM*a.snapToGrid},angle:r(90)}}}})]}}export{n as default};
